CMAKE_MINIMUM_REQUIRED ( VERSION 2.8 )

PROJECT ( Simba )

SET ( SIMBA_ENABLE_ALEMBIC_HDF5 OFF CACHE STRING "Enabling Alembic with HDF5 variable defaulting to 'OFF'")
SET ( SIMBA_BUILD_ARNOLD_TOOLS ON CACHE STRING "Build Arnold tools and plugins" )
SET ( SIMBA_BUILD_RENDERMAN_TOOLS OFF CACHE STRING "Build RenderMan tools and plugins" )
SET ( SIMBA_BUILD_RENDERMAN_TOOLS_WITH_PRMAN OFF CACHE STRING "Build RenderMan tools and plugins" )
SET ( SIMBA_BUILD_RENDERMAN_TOOLS_WITH_3DELIGHT ON CACHE STRING "Build RenderMan tools and plugins" )

FIND_PACKAGE ( CryptoPP REQUIRED )
FIND_PACKAGE ( GoogleLog REQUIRED )
FIND_PACKAGE ( S2AA REQUIRED )
FIND_PACKAGE ( ILMBase REQUIRED )
FIND_PACKAGE ( Boost 1.52 REQUIRED program_options unit_test_framework serialization )
IF (WIN32)
   ADD_DEFINITIONS ( -DBOOST_ALL_NO_LIB )
ENDIF ()
FIND_PACKAGE ( Alembic REQUIRED )
IF ( SIMBA_ENABLE_ALEMBIC_HDF5 )
  IF (WIN32) 
	FIND_PACKAGE ( HDF5 COMPONENTS C HL )
  ELSE()
	FIND_PACKAGE ( HDF5 REQUIRED COMPONENTS C HL )
  ENDIF()
  INCLUDE_DIRECTORIES ( ${HDF5_C_INCLUDE_DIR} )
  ADD_DEFINITIONS ( -DSIMBA_ENABLE_ALEMBIC_HDF5 )
  IF (WIN32)
#	  ADD_DEFINITIONS (  -DH5_BUILT_AS_DYNAMIC_LIB )
  ENDIF ()
ENDIF ( SIMBA_ENABLE_ALEMBIC_HDF5 )

INCLUDE_DIRECTORIES ( include )

INCLUDE_DIRECTORIES (
  ${CryptoPP_INCLUDE_DIR}
  ${Boost_INCLUDE_DIR}
  ${ILMBASE_INCLUDE_DIRS}
  ${ALEMBIC_INCLUDE_DIR}
  ${S2AA_INCLUDE_DIR}
  ${GLOG_INCLUDE_DIR}
  )

IF ( SIMBA_BUILD_ARNOLD_TOOLS )
  FIND_PACKAGE ( Arnold REQUIRED )
  INCLUDE_DIRECTORIES (
	${ARNOLD_INCLUDE_DIR}
	)
ENDIF ()

IF ( SIMBA_BUILD_RENDERMAN_TOOLS )
  IF ( SIMBA_BUILD_RENDERMAN_TOOLS_WITH_PRMAN )
     FIND_PACKAGE ( PRMan REQUIRED )
	INCLUDE_DIRECTORIES (
	  ${PRMAN_INCLUDE_DIR}
	  )
	  SET ( SIMBA_RENDERMAN_LINK_LIBRARIES ${PRMAN_prman_LIBRARY} )
  ELSEIF ( SIMBA_BUILD_RENDERMAN_TOOLS_WITH_3DELIGHT )
	FIND_PACKAGE ( Delight REQUIRED )
	INCLUDE_DIRECTORIES (
	  ${DELIGHT_INCLUDE_DIR}
	  )
	  SET ( SIMBA_RENDERMAN_LINK_LIBRARIES ${A} )
  ELSE ()
  ENDIF ()
ENDIF ()

IF ( NOT WIN32 )
  ADD_DEFINITIONS ( -fPIC )
ENDIF ( NOT WIN32 )

ADD_SUBDIRECTORY ( lib )
ADD_SUBDIRECTORY ( dev )
ADD_SUBDIRECTORY ( unit_test )
